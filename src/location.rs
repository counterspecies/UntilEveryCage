

use serde::Serialize;
use serde::Deserialize;


#[derive(Serialize, Deserialize, Debug)]
pub struct Location {
    pub establishment_id: String,
    pub establishment_number: String,
    pub establishment_name: String,
    pub duns_number: String,
    pub street: String,
    pub city: String,
    pub state: String,
    pub zip: String,
    pub phone: String,
    pub grant_date: String,
    pub activities: String,
    pub dbas: String,
    pub district: String,
    pub circuit: String,
    pub size: String,
    pub latitude: f64, // This should be a number, will cause JS issues
    pub longitude: f64, // This should be a number, will cause JS issues
    pub county: String,
    pub fips_code: String,
    pub meat_exemption_custom_slaughter: String,
    pub poultry_exemption_custom_slaughter: String,
    pub slaughter: String,
    pub meat_slaughter: String,
    pub beef_cow_slaughter: String,
    pub steer_slaughter: String,
    pub heifer_slaughter: String,
    pub bull_stag_slaughter: String,
    pub dairy_cow_slaughter: String,
    pub heavy_calf_slaughter: String,
    pub bob_veal_slaughter: String,
    pub formula_fed_veal_slaughter: String,
    pub non_formula_fed_veal_slaughter: String,
    pub market_swine_slaughter: String,
    pub sow_slaughter: String,
    pub roaster_swine_slaughter: String,
    pub boar_stag_swine_slaughter: String,
    pub stag_swine_slaughter: String,
    pub feral_swine_slaughter: String,
    pub goat_slaughter: String,
    pub young_goat_slaughter: String,
    pub adult_goat_slaughter: String,
    pub sheep_slaughter: String,
    pub lamb_slaughter: String,
    pub deer_reindeer_slaughter: String,
    pub antelope_slaughter: String,
    pub elk_slaughter: String,
    pub bison_slaughter: String,
    pub buffalo_slaughter: String,
    pub water_buffalo_slaughter: String,
    pub cattalo_slaughter: String,
    pub yak_slaughter: String,
    pub other_voluntary_livestock_slaughter: String,
    pub rabbit_slaughter: String,
    pub poultry_slaughter: String,
    pub young_chicken_slaughter: String,
    pub light_fowl_slaughter: String,
    pub heavy_fowl_slaughter: String,
    pub capon_slaughter: String,
    pub young_turkey_slaughter: String,
    pub young_breeder_turkey_slaughter: String,
    pub old_breeder_turkey_slaughter: String,
    pub fryer_roaster_turkey_slaughter: String,
    pub duck_slaughter: String,
    pub goose_slaughter: String,
    pub pheasant_slaughter: String,
    pub quail_slaughter: String,
    pub guinea_slaughter: String,
    pub ostrich_slaughter: String,
    pub emu_slaughter: String,
    pub rhea_slaughter: String,
    pub squab_slaughter: String,
    pub other_voluntary_poultry_slaughter: String,
    pub slaughter_or_processing_only: String,
    pub slaughter_only_class: String,
    pub slaughter_only_species: String,
    pub meat_slaughter_only_species: String,
    pub poultry_slaughter_only_species: String,
    pub slaughter_volume_category: String,
}